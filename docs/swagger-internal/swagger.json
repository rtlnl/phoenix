{
  "swagger": "2.0",
  "info": {
    "title": "RTL-DI Personalization APIs",
    "description": "This is the RESTful APIs of RTL Personalization models",
    "version": "1.0.0"
  },
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/",
  "paths": {
    "/streaming": {
      "post": {
        "summary": "Insert one record",
        "description": "This request will allow the client to upload one single entry into the model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object describing the model to target and the data to upload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StreamingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data uploaded",
            "schema": {
              "$ref": "#/definitions/StreamingResponse"
            }
          },
          "400": {
            "description": "Invalid input payload",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Model not found",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "Could not upload data to the model",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        }
      },
      "put": {
        "summary": "Update one record",
        "description": "This request will allow the client to update one single entry into the model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object describing the model to target and the data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StreamingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data uploaded",
            "schema": {
              "$ref": "#/definitions/StreamingResponse"
            }
          },
          "400": {
            "description": "Invalid input payload",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Model not found",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "Could not update data to the model",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete one record",
        "description": "This request will allow the client to delete one single entry of the model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object describing the model to target and the data to delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StreamingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data uploaded",
            "schema": {
              "$ref": "#/definitions/StreamingResponse"
            }
          },
          "400": {
            "description": "Invalid input payload",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Model not found",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "Could not delete data to the model",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        }
      }
    },
    "/batch": {
      "post": {
        "summary": "Upload data from either a file or a location",
        "description": "This endpoints allow the client to upload more records in two different way. Either using the payload itself or a S3 location",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Payload describing the model to target and the data to upload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data uploaded correctly",
            "schema": {
              "$ref": "#/definitions/BatchResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Model not found",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "500": {
            "description": "Prediction model couldn't work properly",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        }
      }
    },
    "/management/model": {
      "post": {
        "summary": "Predict label",
        "description": "Predict a label based on the log line in input",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Log line representation for requiring a prediction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagementModelRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Prediction model couldn't work properly"
          }
        }
      }
    }
  },
  "definitions": {
    "StreamingRequest": {
      "type": "object",
      "properties": {
        "publicationPoint": {
          "description": "Name of the publication point where the model will be placed",
          "example": "rtl_news",
          "type": "string"
        },
        "campaign": {
          "description": "Campaign name used during the creation of the model",
          "example": "homepage",
          "type": "string"
        },
        "signal": {
          "description": "Signal value used for uploading the recommended items",
          "example": "123_456",
          "type": "string"
        },
        "recommendations": {
          "description": "Recommended items for the particular signal",
          "example": "[\"item1\",\"item2\",\"item3\"]",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "publicationPoint",
        "campaign",
        "signal",
        "recommendations"
      ]
    },
    "StreamingResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "message of the action just taken",
          "type": "string"
        }
      }
    },
    "BatchRequest": {
      "type": "object",
      "properties": {
        "publicationPoint": {
          "description": "Name of the publication point where the model will be placed",
          "example": "rtl_news",
          "type": "string"
        },
        "campaign": {
          "description": "Campaign name used during the creation of the model",
          "example": "homepage",
          "type": "string"
        },
        "dataLocation": {
          "description": "S3 location where to fetch the CSV file",
          "example": "s3://my-bucket/foo/bar.csv",
          "type": "string"
        },
        "data": {
          "description": "Recommended items for the particular signal",
          "example": "[{\"12\": [\"3\", \"4\", \"5\"]},{\"13\": [\"5\",\"6\", \"7\"]}]",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "required": [
        "publicationPoint",
        "campaign"
      ]
    },
    "BatchResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "message of the action just taken",
          "type": "string"
        }
      }
    },
    "ManagementModelRequest": {
      "type": "object",
      "properties": {
        "epoch_ms": {
          "description": "Timestamp of the current log line",
          "example": "1520280001034",
          "type": "string"
        }
      },
      "required": [
        "model"
      ]
    },
    "ResponseError": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Error message of the failed operation",
          "example": "Key pizza doesn't exist",
          "type": "string"
        }
      }
    }
  }
}